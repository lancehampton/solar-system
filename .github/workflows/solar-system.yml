name: Solar System Workflow

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'

env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME}}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

jobs:
  unit-testing:
    name: Unit Testing
    strategy:
      matrix:
        nodejs_version: [18, 20]
        operating_system: [ubuntu-latest, macos-latest]
        exclude:
          - nodejs_version: 18
            operating_system: macos-latest
    runs-on: ${{ matrix.operating_system }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup NodeJS Version - ${{ matrix.nodejs_version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.nodejs_version }}

    - name: Cache NPM dependencies
      uses: actions/cache@v3
      with:
        path: node_modules # Folder where npm dependencies are installed
        key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}

    - name: Install dependencies
      run: npm install

    - name: Run unit tests
      id: nodejs-unit-test
      run: npm test

    - name: Archive test report
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: mocha-test-result
        path: test-results.xml

  code-coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup NodeJS Version - 18
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Cache NPM dependencies
      uses: actions/cache@v3
      with:
        path: node_modules # Folder where npm dependencies are installed
        key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}

    - name: Install dependencies
      run: npm install

    - name: Run code coverage
      continue-on-error: true
      run: npm run coverage

    - name: Archive code coverage report
      uses: actions/upload-artifact@v3
      with:
        name: code-coverage-report
        path: coverage
        retention-days: 5

  docker:
    needs: [unit-testing, code-coverage]
    name: Build and Push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Dockerhub login
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}